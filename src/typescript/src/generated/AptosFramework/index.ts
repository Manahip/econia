
import { AptosParserRepo } from "@manahippo/move-to-ts";
import * as Account from './Account';
import * as AccountUtils from './AccountUtils';
import * as AptosGovernance from './AptosGovernance';
import * as BigVector from './BigVector';
import * as Block from './Block';
import * as BucketTable from './BucketTable';
import * as ChainId from './ChainId';
import * as Coin from './Coin';
import * as Comparator from './Comparator';
import * as ConsensusConfig from './ConsensusConfig';
import * as Genesis from './Genesis';
import * as GovernanceProposal from './GovernanceProposal';
import * as IterableTable from './IterableTable';
import * as ManagedCoin from './ManagedCoin';
import * as Reconfiguration from './Reconfiguration';
import * as ResourceAccount from './ResourceAccount';
import * as Signature from './Signature';
import * as SimpleMap from './SimpleMap';
import * as Stake from './Stake';
import * as SystemAddresses from './SystemAddresses';
import * as Table from './Table';
import * as TestCoin from './TestCoin';
import * as Timestamp from './Timestamp';
import * as Token from './Token';
import * as TokenTransfers from './TokenTransfers';
import * as TransactionContext from './TransactionContext';
import * as TransactionFee from './TransactionFee';
import * as TransactionPublishingOption from './TransactionPublishingOption';
import * as TypeInfo from './TypeInfo';
import * as VMConfig from './VMConfig';
import * as ValidatorSetScript from './ValidatorSetScript';
import * as Version from './Version';
import * as Voting from './Voting';

export * as Account from './Account';
export * as AccountUtils from './AccountUtils';
export * as AptosGovernance from './AptosGovernance';
export * as BigVector from './BigVector';
export * as Block from './Block';
export * as BucketTable from './BucketTable';
export * as ChainId from './ChainId';
export * as Coin from './Coin';
export * as Comparator from './Comparator';
export * as ConsensusConfig from './ConsensusConfig';
export * as Genesis from './Genesis';
export * as GovernanceProposal from './GovernanceProposal';
export * as IterableTable from './IterableTable';
export * as ManagedCoin from './ManagedCoin';
export * as Reconfiguration from './Reconfiguration';
export * as ResourceAccount from './ResourceAccount';
export * as Signature from './Signature';
export * as SimpleMap from './SimpleMap';
export * as Stake from './Stake';
export * as SystemAddresses from './SystemAddresses';
export * as Table from './Table';
export * as TestCoin from './TestCoin';
export * as Timestamp from './Timestamp';
export * as Token from './Token';
export * as TokenTransfers from './TokenTransfers';
export * as TransactionContext from './TransactionContext';
export * as TransactionFee from './TransactionFee';
export * as TransactionPublishingOption from './TransactionPublishingOption';
export * as TypeInfo from './TypeInfo';
export * as VMConfig from './VMConfig';
export * as ValidatorSetScript from './ValidatorSetScript';
export * as Version from './Version';
export * as Voting from './Voting';


export function loadParsers(repo: AptosParserRepo) {
  Account.loadParsers(repo);
  AccountUtils.loadParsers(repo);
  AptosGovernance.loadParsers(repo);
  BigVector.loadParsers(repo);
  Block.loadParsers(repo);
  BucketTable.loadParsers(repo);
  ChainId.loadParsers(repo);
  Coin.loadParsers(repo);
  Comparator.loadParsers(repo);
  ConsensusConfig.loadParsers(repo);
  Genesis.loadParsers(repo);
  GovernanceProposal.loadParsers(repo);
  IterableTable.loadParsers(repo);
  ManagedCoin.loadParsers(repo);
  Reconfiguration.loadParsers(repo);
  ResourceAccount.loadParsers(repo);
  Signature.loadParsers(repo);
  SimpleMap.loadParsers(repo);
  Stake.loadParsers(repo);
  SystemAddresses.loadParsers(repo);
  Table.loadParsers(repo);
  TestCoin.loadParsers(repo);
  Timestamp.loadParsers(repo);
  Token.loadParsers(repo);
  TokenTransfers.loadParsers(repo);
  TransactionContext.loadParsers(repo);
  TransactionFee.loadParsers(repo);
  TransactionPublishingOption.loadParsers(repo);
  TypeInfo.loadParsers(repo);
  VMConfig.loadParsers(repo);
  ValidatorSetScript.loadParsers(repo);
  Version.loadParsers(repo);
  Voting.loadParsers(repo);
}

export function getPackageRepo(): AptosParserRepo {
  const repo = new AptosParserRepo();
  loadParsers(repo);
  repo.addDefaultParsers();
  return repo;
}
